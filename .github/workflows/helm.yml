name: Helm Charts

on:
  workflow_run:
    workflows: ["Docker Build"]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  HELM_CHATR: alidns-webhook
  HELM_REPO: https://wjiec.github.io/alidns-webhook

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Download charts
        run: |
          if helm repo add self $HELM_REPO &>/dev/null; then
            CHART_VERSIONS=$(helm search repo -l $HELM_CHATR | awk '(NR>1) { print $2 }')
            mkdir -p _build && cd _build
            for CHART_VERSION in $CHART_VERSIONS; do helm pull self/$HELM_CHATR --version $CHART_VERSION; done
          fi

      - name: Package
        run: |
          mkdir -p _build && cd _build
          helm package ../charts/*
          helm repo index .

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
